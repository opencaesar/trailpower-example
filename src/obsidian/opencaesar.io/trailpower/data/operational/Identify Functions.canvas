{
	"nodes":[
		{"id":"a11c15f05417f986","type":"text","text":"# Operational Functions\n\nIdentify functions and allocate them to operational entities:\n\n```dataviewjs\nconst {fieldModifier: f} = this.app.plugins.plugins[\"metadata-menu\"].api;\n\ndv.table(['Function', 'isPerformedBy'], \n\t dv.pages('#function/Function and !\"metadata/templates\"')\n\t\t .sort(p => p.file.name)\n\t\t .map(p => [ p.file.link, \n\t\t\t\t\t f(dv, p, \"isPerformedBy\", {options: {\n\t\t\t\t\t   alwaysOn: true, showAddField: true, inFrontmatter: true}})\n\t\t])\n\t)\n```\n\n`BUTTON[function-button]`\n\n```meta-bind-button\nlabel: New Function\nicon: \"\"\nhidden: true\nclass: \"\"\ntooltip: Adds a new Function\nid: function-button\nstyle: primary\nactions:\n  - type: templaterCreateNote\n    templateFile: metadata/templates/function/New Function.md\n    folderPath: data/operational/functions\n    fileName: New Function\n    openNote: true\n    openIfAlreadyExists: true\n\n```\n\n","x":-820,"y":-2120,"width":500,"height":700,"color":"1"},
		{"id":"2df8a855affb9187","type":"text","text":"# Operational Functions\n```dataviewjs\nvar s = ''\ns += '```plantuml-svg\\n';\ns += 'left to right direction\\n';\ns += 'allowmixing\\n'\ns += 'skinparam componentStyle rectangle\\n';\nconst functions = dv.pages('#function/Function and !\"metadata/templates\"');\nconst entities = dv.pages('(#operation/Entity or #operation/Actor or #component/System) and !\"metadata/templates\"');\nentities?.forEach(i => {\n\ts += 'component \"'+i.file.name+'\" as '+i.file.name.replaceAll(\" \", \"_\")+' [[['+i.file.name+']]]{\\n'\n\tfunctions?.filter(j => j.isPerformedBy?.path == i.file.path) .forEach(j => {\n\t\ts += '  component \"'+j.file.name+'\" as '+j.file.name.replaceAll(\" \", \"_\")+' <<function>> [[['+j.file.name+']]]\\n'\n\t});\n\ts += '}\\n'\n});\ns += '```'\ndv.paragraph(s);\n```\n","x":-300,"y":-2120,"width":1280,"height":1120}
	],
	"edges":[]
}