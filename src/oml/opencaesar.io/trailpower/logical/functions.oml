description <http://opencaesar.io/trailpower/logical/functions#> as functions {

	uses <http://opencaesar.io/sierra/function#> as function

	uses <http://opencaesar.io/sierra/base#> as base

	uses <http://opencaesar.io/sierra/datatype#> as datatype

	extends <http://opencaesar.io/trailpower/logical/capabilities#> as capabilities

	extends <http://opencaesar.io/trailpower/logical/components#> as components

	// Functions

	instance Locate_Charger : function:Function [
		function:isPerformedBy capabilities:User
		function:hasInput Locate_Charger.in, Locate_Charger.in2
	]
	instance Locate_Charger.in : function:InputPin
	instance Locate_Charger.in2 : function:InputPin

	instance Comprend_State : function:Function [
		function:isPerformedBy capabilities:User
		function:hasInput Comprend_State.in
		function:hasOutput Comprend_State.out, Comprend_State.out2
	]
	instance Comprend_State.in : function:InputPin
	instance Comprend_State.out : function:OutputPin
	instance Comprend_State.out2 : function:OutputPin

	instance Connect_Device : function:Function [
		function:isPerformedBy capabilities:User
		function:hasInput Connect_Device.in
		function:hasOutput Connect_Device.out, Connect_Device.out2
	]
	instance Connect_Device.in : function:InputPin
	instance Connect_Device.out : function:OutputPin
	instance Connect_Device.out2 : function:OutputPin

	instance Disconnect_Device : function:Function [
		function:isPerformedBy capabilities:User
		function:hasOutput Disconnect_Device.out, Disconnect_Device.out2
	]
	instance Disconnect_Device.out : function:OutputPin
	instance Disconnect_Device.out2 : function:OutputPin

	instance Receive_Connection : function:Function [
		function:isPerformedBy capabilities:USB_Device
		function:hasInput Receive_Connection.in
	]
	instance Receive_Connection.in : function:InputPin

	instance Accept_Charger : function:Function [
		function:isPerformedBy capabilities:USB_Device
		function:hasInput Accept_Charger.in
	]
	instance Accept_Charger.in : function:InputPin

	instance Disconnect : function:Function [
		function:isPerformedBy capabilities:USB_Device
		function:hasInput Disconnect.in
	]
	instance Disconnect.in : function:InputPin

	instance Evaluate_Performance : function:Function [
		function:isPerformedBy capabilities:Developer
		function:hasInput Evaluate_Performance.in
	]
	instance Evaluate_Performance.in : function:InputPin

	instance Produce_Light : function:Function [
		function:isPerformedBy capabilities:Sun
		function:hasOutput Produce_Light.out
	]
	instance Produce_Light.out : function:OutputPin

	instance Provide_Performance_Information : function:Function [
		function:isPerformedBy components:Telemetry_System
		function:hasInput Provide_Performance_Information.in
		function:hasOutput Provide_Performance_Information.out
	]
	instance Provide_Performance_Information.in : function:InputPin
	instance Provide_Performance_Information.out : function:OutputPin

	instance Convert_Light_to_Power : function:Function [
		function:isPerformedBy components:Solar_Panel
		function:hasInput Convert_Light_to_Power.in
		function:hasOutput Convert_Light_to_Power.out, Convert_Light_to_Power.out2
	]
	instance Convert_Light_to_Power.in : function:InputPin
	instance Convert_Light_to_Power.out : function:OutputPin
	instance Convert_Light_to_Power.out2 : function:OutputPin

	instance Store_Energy : function:Function [
		function:isPerformedBy components:Battery
		function:hasInput Store_Energy.in
		function:hasOutput Store_Energy.out, Store_Energy.out2
	]
	instance Store_Energy.in : function:InputPin
	instance Store_Energy.out : function:OutputPin
	instance Store_Energy.out2 : function:OutputPin

	instance Power_Lights : function:Function [
		function:isPerformedBy components:Light_System
		function:hasInput Power_Lights.in
		function:hasOutput Power_Lights.out
	]
	instance Power_Lights.in : function:InputPin
	instance Power_Lights.out : function:OutputPin

	instance Boost_Voltage_to_USB : function:Function [
		function:isPerformedBy components:Boost
		function:hasInput Boost_Voltage_to_USB.in
		function:hasOutput Boost_Voltage_to_USB.out, Boost_Voltage_to_USB.out2, Boost_Voltage_to_USB.out3
	]
	instance Boost_Voltage_to_USB.in : function:InputPin
	instance Boost_Voltage_to_USB.out : function:OutputPin
	instance Boost_Voltage_to_USB.out2 : function:OutputPin
	instance Boost_Voltage_to_USB.out3 : function:OutputPin

	instance Receive_Connection2 : function:Function [
		function:isPerformedBy components:Boost
		function:hasInput Receive_Connection2.in
	]
	instance Receive_Connection2.in : function:InputPin

	instance Disconnect2 : function:Function [
		function:isPerformedBy components:Boost
		function:hasInput Disconnect2.in
	]
	instance Disconnect2.in : function:InputPin

	instance Charge_Storage_Device : function:Function [
		function:isPerformedBy components:Charger
		function:hasInput Charge_Storage_Device.in
		function:hasOutput Charge_Storage_Device.out, Charge_Storage_Device.out2, Charge_Storage_Device.out3
	]
	instance Charge_Storage_Device.in : function:InputPin
	instance Charge_Storage_Device.out : function:OutputPin
	instance Charge_Storage_Device.out2 : function:OutputPin
	instance Charge_Storage_Device.out3 : function:OutputPin

	instance Supply_Power_When_No_Light : function:Function [
		function:isPerformedBy components:Charger
		function:hasInput Supply_Power_When_No_Light.in, Supply_Power_When_No_Light.in2
		function:hasOutput Supply_Power_When_No_Light.out
	]
	instance Supply_Power_When_No_Light.in : function:InputPin
	instance Supply_Power_When_No_Light.in2 : function:InputPin
	instance Supply_Power_When_No_Light.out : function:OutputPin

	instance Provide_State : function:Function [
		function:isPerformedBy components:Charger
		function:hasInput Provide_State.in
		function:hasOutput Provide_State.out
	]
	instance Provide_State.in : function:InputPin
	instance Provide_State.out : function:OutputPin

	instance Voltage_Gather : function:Function [
		function:isPerformedBy components:Charger
		function:hasInput Voltage_Gather.in, Voltage_Gather.in2, Voltage_Gather.in3
		function:hasOutput Voltage_Gather.out
	]
	instance Voltage_Gather.in : function:InputPin
	instance Voltage_Gather.in2 : function:InputPin
	instance Voltage_Gather.in3 : function:InputPin
	instance Voltage_Gather.out : function:OutputPin

	// Items

	instance Illuminate : datatype:PrimitiveType

	instance Light_Power : datatype:PrimitiveType

	instance Power : datatype:PrimitiveType

	instance Charger_Light : datatype:PrimitiveType

	instance State : datatype:PrimitiveType

	instance Charger_State : datatype:PrimitiveType

	instance Device_Connection : datatype:PrimitiveType

	instance Charger_Connection : datatype:PrimitiveType

	instance Light : datatype:PrimitiveType

	instance Charger_Power : datatype:PrimitiveType

	instance Stored_Energy : datatype:PrimitiveType

	instance Energy : datatype:PrimitiveType

	instance Device_Disconnect : datatype:PrimitiveType

	instance Charger_Disconnect : datatype:PrimitiveType

	instance Panel_Voltage : datatype:PrimitiveType

	instance Charge_Voltage : datatype:PrimitiveType

	instance Store_Voltage : datatype:PrimitiveType

	instance Conversion_Performance : datatype:PrimitiveType

	instance Performance : datatype:PrimitiveType

	// Exchanges

	relation instance Exchange1 : function:Exchange [
		from Boost_Voltage_to_USB.out
		to Supply_Power_When_No_Light.in
		function:transmits Illuminate
		function:implements capabilities:Provide_24h_Visibility
	]

	relation instance Exchange2 : function:Exchange [
		from Supply_Power_When_No_Light.in
		to Supply_Power_When_No_Light.out
		function:implements capabilities:Provide_24h_Visibility
	]

	relation instance Exchange3 : function:Exchange [
		from Charge_Storage_Device.out
		to Supply_Power_When_No_Light.in2
		function:transmits Light_Power
		function:implements capabilities:Provide_24h_Visibility
	]

	relation instance Exchange4 : function:Exchange [
		from Supply_Power_When_No_Light.in2
		to Supply_Power_When_No_Light.out
		function:implements capabilities:Provide_24h_Visibility
	]

	relation instance Exchange5 : function:Exchange [
		from Supply_Power_When_No_Light.out
		to Power_Lights.in
		function:transmits Power
		function:implements capabilities:Provide_24h_Visibility
	]

	relation instance Exchange6 : function:Exchange [
		from Power_Lights.out
		to Locate_Charger.in
		function:transmits Charger_Light
		function:implements capabilities:Provide_24h_Visibility
	]

	relation instance Exchange7 : function:Exchange [
		from Boost_Voltage_to_USB.out2
		to Provide_State.in
		function:transmits State
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange8 : function:Exchange [
		from Provide_State.in
		to Provide_State.out
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange9 : function:Exchange [
		from Provide_State.out
		to Comprend_State.in
		function:transmits Charger_State
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange10 : function:Exchange [
		from Comprend_State.in
		to Comprend_State.out
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange11 : function:Exchange [
		from Comprend_State.out
		to Connect_Device.in
		function:transmits State
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange12 : function:Exchange [
		from Connect_Device.in
		to Connect_Device.out
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange13 : function:Exchange [
		from Connect_Device.in
		to Connect_Device.out2
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange14 : function:Exchange [
		from Connect_Device.out
		to Receive_Connection.in
		function:transmits Device_Connection
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange15 : function:Exchange [
		from Connect_Device.out2
		to Receive_Connection2.in
		function:transmits Charger_Connection
		function:implements capabilities:Connect_to_USB_Device_Cable
	]

	relation instance Exchange16 : function:Exchange [
		from Produce_Light.out
		to Convert_Light_to_Power.in
		function:transmits Light
		function:implements capabilities:Charge_USB_Device
		function:implements capabilities:Generate_Power
	]

	relation instance Exchange17 : function:Exchange [
		from Convert_Light_to_Power.in
		to Convert_Light_to_Power.out
		function:implements capabilities:Charge_USB_Device
		function:implements capabilities:Generate_Power
	]

	relation instance Exchange18 : function:Exchange [
		from Convert_Light_to_Power.out
		to Charge_Storage_Device.in
		function:transmits Power
		function:implements capabilities:Charge_USB_Device
		function:implements capabilities:Generate_Power
	]

	relation instance Exchange19 : function:Exchange [
		from Charge_Storage_Device.in
		to Charge_Storage_Device.out2
		function:implements capabilities:Charge_USB_Device
		function:implements capabilities:Generate_Power
	]

	relation instance Exchange20 : function:Exchange [
		from Charge_Storage_Device.out2
		to Store_Energy.in
		function:transmits Charger_Power
		function:implements capabilities:Charge_USB_Device
		function:implements capabilities:Generate_Power
	]

	relation instance Exchange21 : function:Exchange [
		from Store_Energy.in
		to Store_Energy.out
		function:implements capabilities:Charge_USB_Device
	]

	relation instance Exchange22 : function:Exchange [
		from Store_Energy.out
		to Boost_Voltage_to_USB.in
		function:transmits Stored_Energy
		function:implements capabilities:Charge_USB_Device
	]

	relation instance Exchange23 : function:Exchange [
		from Boost_Voltage_to_USB.in
		to Boost_Voltage_to_USB.out3
		function:implements capabilities:Charge_USB_Device
	]

	relation instance Exchange24 : function:Exchange [
		from Boost_Voltage_to_USB.out3
		to Accept_Charger.in
		function:transmits Energy
		function:implements capabilities:Charge_USB_Device
	]

	relation instance Exchange25 : function:Exchange [
		from Disconnect_Device.out
		to Disconnect.in
		function:transmits Device_Disconnect
		function:implements capabilities:Disconnect_USB_Device_Cable
	]

	relation instance Exchange26 : function:Exchange [
		from Disconnect_Device.out2
		to Disconnect2.in
		function:transmits Charger_Disconnect
		function:implements capabilities:Disconnect_USB_Device_Cable
	]

	relation instance Exchange27 : function:Exchange [
		from Convert_Light_to_Power.out2
		to Voltage_Gather.in
		function:transmits Panel_Voltage
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange28 : function:Exchange [
		from Voltage_Gather.in
		to Voltage_Gather.out
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange29 : function:Exchange [
		from Charge_Storage_Device.out3
		to Voltage_Gather.in2
		function:transmits Charge_Voltage
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange30 : function:Exchange [
		from Voltage_Gather.in2
		to Voltage_Gather.out
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange31 : function:Exchange [
		from Store_Energy.out2
		to Voltage_Gather.in3
		function:transmits Store_Voltage
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange32 : function:Exchange [
		from Voltage_Gather.in3
		to Voltage_Gather.out
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange33 : function:Exchange [
		from Voltage_Gather.out
		to Provide_Performance_Information.in
		function:transmits Conversion_Performance
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange34 : function:Exchange [
		from Provide_Performance_Information.in
		to Provide_Performance_Information.out
		function:implements capabilities:Monitor_Operation_Remotey
	]

	relation instance Exchange35 : function:Exchange [
		from Provide_Performance_Information.out
		to Evaluate_Performance.in
		function:transmits Performance
		function:implements capabilities:Monitor_Operation_Remotey
	]

}